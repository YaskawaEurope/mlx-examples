nQAmax := 2;
nPosTableSize := UINT_TO_INT(SIZEOF(posTable) / SIZEOF(posTable.stEntry[0]));

// -----------------------------------------------------------------------------
// calculate remaining entries until standstill
// -----------------------------------------------------------------------------
nEntriesRemaining := McePosTableRemainingEntries( index := index,
                                                  posTableSize := nPosTableSize,
                                                  rollOver := NOT stopAfterLastEntry,
                                                  posTable := posTable);


// -----------------------------------------------------------------------------
// bitstatus last entry / stop entry
// -----------------------------------------------------------------------------
lastEntry := FALSE;
stopEntry := FALSE;
IF (nEntriesRemaining <= 0) THEN
  IF (posTable.stEntry[index].nActionID > 0) THEN
    stopEntry := TRUE;
    // special case: the stopEntry is also the lastEntry
    lastEntry := (McePosTableFindEntry(index, 1, nPosTableSize, FALSE, posTable) = - 1 );
  ELSE
    lastEntry := TRUE;
  END_IF;
END_IF;


// -----------------------------------------------------------------------------
// calculate Queueing Amount (allowed number of motions to be queued)
// -----------------------------------------------------------------------------
// scenario 1; reduce QA till zero now
IF (posTableMode > 0) OR stopRequest THEN
  QA := QA - 1;
ELSE
  // scenario 2; reduce QA till zero by synchronizing to nEntriesRemaining
  IF (nEntriesRemaining < nQAmax) THEN
    QA := nEntriesRemaining;
  // scenario 3; use max QA
  ELSE
    QA := nQAmax;
  END_IF;
END_IF;

IF firstMove OR (QA < 0) THEN
  QA := 0;
END_IF;
